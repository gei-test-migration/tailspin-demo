name: Spacegame.Web
on:
 push:
   branches: [ main ]
   paths-ignore:
    - .github/**
env:
  API_APP_NAME: 'leaderboardgh'
  WEB_APP_NAME: 'spacegamegh'

jobs:
    build_api_app:
      name: üß™ Build API App
      runs-on: macos-latest
      
      steps:
      - uses: actions/checkout@v2
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.301
          
      - name: Restore dependencies
        run: dotnet restore
        working-directory: ./Tailspin.SpaceGame.LeaderboardContainer
        
      - name: Build
        run: dotnet build --no-restore
        working-directory: ./Tailspin.SpaceGame.LeaderboardContainer
             
      - name: Publish
        run: dotnet publish --no-restore -c Release
        working-directory: ./Tailspin.SpaceGame.LeaderboardContainer
      
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.1
        with:
          name: spacegameleaderboard
          path: ./Tailspin.SpaceGame.LeaderboardContainer/bin/Release/netcoreapp3.1/publish/

    build_web_app:
      name: üß™ Build Web App
      runs-on: macos-latest
      steps:
      - uses: actions/checkout@v2
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.301
          
      - name: Configure App Settings
        uses: cschleiden/replace-tokens@v1
        with: 
          files: '["Tailspin.SpaceGame.Web/appsettings.json"]'
        env:
          LEADERBOARD_API_URL: https://${{env.API_APP_NAME}}.azurewebsites.net/api/Leaderboard
        
      - name: Restore dependencies
        run: dotnet restore
        working-directory: ./Tailspin.SpaceGame.Web
        
      - name: Build
        run: dotnet build --no-restore
        working-directory: ./Tailspin.SpaceGame.Web
      
      - name: Publish
        run: dotnet publish --no-restore -c Release
        working-directory: ./Tailspin.SpaceGame.Web
      
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.1
        with:
          name: spacegameweb
          path: ./Tailspin.SpaceGame.Web/bin/Release/netcoreapp3.1/publish/
      
    test_api_app:
      name: Unit Tests API
      runs-on: macos-latest
      needs: [build_api_app]
      steps:
      - uses: actions/checkout@v2
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.301
          
      - name: Restore dependencies
        run: dotnet restore
        working-directory: ./Tailspin.SpaceGame.LeaderboardContainer
        
      - name: Build
        run: dotnet build --no-restore
        working-directory: ./Tailspin.SpaceGame.LeaderboardContainer

      - name: Test
        run: dotnet test --no-build --verbosity normal
        working-directory: ./Tailspin.SpaceGame.LeaderboardContainer
    
    test_web_app:
      name: Unit Tests Web
      runs-on: macos-latest
      needs: [build_web_app ]
      steps:
      - uses: actions/checkout@v2
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.301           
          
      - name: Restore dependencies
        run: dotnet restore
        working-directory: ./Tailspin.SpaceGame.Web
        
      - name: Build
        run: dotnet build --no-restore
        working-directory: ./Tailspin.SpaceGame.Web
      
      - name: Test
        run: dotnet test --no-build --verbosity normal
        working-directory: ./Tailspin.SpaceGame.Web
        
    code-analysis:
     name: üîÜ Code Analysis
     runs-on: macos-latest
     needs: [test_api_app, test_web_app]
     steps:
     - name: Checkout
       uses: actions/checkout@v2
       with:
         # Make sure the actual branch is checked out when running on pull requests
         ref: ${{ github.head_ref }}
    
     - name: SonarCloud Scan
       uses: sonarsource/sonarcloud-github-action@v1.5
       env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    
    code-ql:
      name: ‚≠ïÔ∏è Security Scanning
      runs-on: macos-latest
      needs: [test_api_app, test_web_app]
      strategy:
        fail-fast: false
        matrix:
          # Supported options are ['csharp', 'cpp', 'go', 'java', 'javascript', 'python']
          language: ['csharp', 'javascript']
      steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: ${{ matrix.language }}
    
    api_app_deploy:
      name: üì¶ Deploy APIs
      runs-on: macos-latest
      environment: 
        name: API App
        url: https://${{env.API_APP_NAME}}.azurewebsites.net/api/Leaderboard
      needs: [build_api_app, code-ql]
      steps:
        
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.0.7
        with:
          name: spacegameleaderboard
          
      - name: Azure WebApp
        uses: Azure/webapps-deploy@v2
        with:
          app-name: ${{env.API_APP_NAME}}
          package: .
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_LEADERBOARDGH}}

    web_app_deploy:
      name: üì¶ Deploy FrontEnd
      runs-on: macos-latest
      environment: 
        name: Web App
        url: https://${{env.WEB_APP_NAME}}.azurewebsites.net/
      needs: [build_web_app, code-ql]
      
      steps:  
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.0.7
        with:
          name: spacegameweb
          
      - name: Azure WebApp
        uses: Azure/webapps-deploy@v2
        with:
          app-name: ${{env.WEB_APP_NAME}}
          package: . 
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_SPACEGH }}
    
    validate-web:
      name: ‚úÖ Validate Web Deployment
      runs-on: macos-latest
      needs: [web_app_deploy]
      steps:
      - name: Check the deployed service URL
        uses: jtalk/url-health-check-action@v1.2
        with:
          url: https://${{ env.WEB_APP_NAME }}.azurewebsites.net/
          follow-redirect: no
          max-attempts: 3 
          retry-delay: 5s 

    validate-api:
      name: ‚úÖ Validate API Deployment
      runs-on: macos-latest
      needs: [api_app_deploy]
      steps:
      - name: Check the deployed service URL
        uses: jtalk/url-health-check-action@v1.2
        with:
          url: https://${{ env.API_APP_NAME }}.azurewebsites.net/api/Leaderboard
          follow-redirect: no
          max-attempts: 3 
          retry-delay: 5s 
